jdbc.type=mysql
jdbc.driverClasss=com.mysql.jdbc.Driver
jdbc.jdbcUrl=jdbc:mysql://localhost:3306/data_basic_develop?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=GMT%2B8
jdbc.username=basedeveloper
jdbc.password=basedeveloper


#druid datasource
#配置扩展插件 监控统计用filters:stat 日志用filters:log4j 防御sql注入用filters:wall
druid.filters:stat,wall

#定义初始连接数
druid.initialSize=0
#定义最大连接数
druid.maxActive=20
#定义最大空闲
druid.maxIdle=20
#定义最小空闲
druid.minIdle=1
#定义最长等待时间
druid.maxWait=60000

#有两个含义 1.Destroy 线程会检测连接的时间 2.testWhileIdle的判断依据
druid.timeBetweenEvictionRunsMillis:60000

#Destory线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于minEvictableIdleTimeMillis，则关闭当前连接
druid.minEvictableIdleTimeMillis:300000

#用来检测连接是否的sql，要求是一个查询语句。在mysql中通常设置为SELECT 'X'
druid.validationQuery:SELECT 'x'
druid.validationQueryTimeout=3600

#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery连接是否有效
druid.testWhileIdle:true

#申请连接时执行validationQuery检测连接是否有效 这个配置会降低性能
druid.testOnBorrow:false

#归还连接时执行validationQuery检测连接是否有效 这个配置会降低性能
druid.testOnReturn:false

#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true
druid.maxOpenPreparedStatements:20

#对于建立连接超过removeAbandonedTimeout的连接强制关闭
druid.removeAbandoned:true

#指定连接建立多长就被强制关闭
druid.removeAbandonedTimeout:1800000

#指定发生removeabandoned时，是否记录当前线程的堆栈信息到日志中
druid.logAbandoned:true

druid.poolPreparedStatements=true
druid.maxPoolPreparedStatementPerConnectionSize=20